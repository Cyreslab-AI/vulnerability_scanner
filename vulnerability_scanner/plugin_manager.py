import importlib
import os
from typing import List, Dict, Any

class PluginManager:
    def __init__(self, plugin_dir: str = 'plugins'):
        self.plugin_dir = plugin_dir
        self.plugins: Dict[str, Any] = {}

    def load_plugins(self):
        """Load all plugins from the plugin directory."""
        for filename in os.listdir(self.plugin_dir):
            if filename.endswith('.py') and not filename.startswith('__'):
                module_name = filename[:-3]  # Remove .py extension
                module = importlib.import_module(f'{self.plugin_dir}.{module_name}')
                if hasattr(module, 'register_plugin'):
                    plugin = module.register_plugin()
                    self.plugins[plugin.name] = plugin

    def get_plugin(self, name: str) -> Any:
        """Get a plugin by name."""
        return self.plugins.get(name)

    def get_all_plugins(self) -> List[Any]:
        """Get all loaded plugins."""
        return list(self.plugins.values())

    def run_plugin_hook(self, hook_name: str, *args, **kwargs) -> List[Any]:
        """Run a specific hook on all plugins that implement it."""
        results = []
        for plugin in self.plugins.values():
            if hasattr(plugin, hook_name):
                hook = getattr(plugin, hook_name)
                results.append(hook(*args, **kwargs))
        return results